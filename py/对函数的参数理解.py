
# coding: utf-8

# In[14]:


#位置参数
#调用的时候传入的参数是与函数定义的参数一一对应的
def power(x,y):
    return x * y

d = power(6,7)
d


# In[13]:


# 默认参数
#n就是默认参数
'''
当函数有多个参数时，把变化大的参数放前面，变化小的参数放后面。变化小的参数就可以作为默认参数。

使用默认参数有什么好处？最大的好处是能降低调用函数的难度。

定义默认参数要牢记一点：默认参数必须指向不变对象！
'''
def power(x,n =2):
    return x * n

d = power(6,7)

d


# In[7]:


#可变参数
'''
可变参数就是传入的参数个数是可变的，可以是1个、2个到任意个，还可以是0个。
在参数前面加一个*，它就在函数里面得到一个元组

'''

def calc(*numbers):
    sum = 0
    for n in numbers:
        sum = sum + n * n
    return sum

d = calc(1,2,3)
d


# In[8]:


#关健字参数
'''
关键字参数允许你传入0个或任意个含参数名的参数，这些关键字参数在函数内部自动组装为一个字典dict
关键字参数有什么用？它可以扩展函数的功能


'''

def person(**kw):
    print(kw)
    
person(a = 7)


# In[10]:


#命名关键字参数
'''
如果要限制关键字参数的名字，就可以用命名关键字参数，
和关键字参数**kw不同，命名关键字参数需要一个特殊分隔符*，*后面的参数被视为命名关键字参数
如果函数定义中已经有了一个可变参数，后面跟着的命名关键字参数就不再需要一个特殊分隔符*了
命名关键字参数必须传入参数名，这和位置参数不同。如果没有传入参数名，调用将报错
'''

def person(*, city, job):
    print(city, job)
    
person(city = 'beijin',job = 28)


# In[ ]:


'''在Python中定义函数，可以用必选参数、默认参数、可变参数、关键字参数和命名关键字参数，
这5种参数都可以组合使用。
但是请注意，
参数定义的顺序必须是：必选参数、默认参数、可变参数、命名关键字参数和关键字参数

'''

